"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.modTsFile = void 0;
var fs = require("fs");
var path = require("path");
var modTsFile;
(function (modTsFile) {
    /** create [projectPath]/mod.ts file */
    function create(params) {
        var projectPath = params.projectPath, tsFilePath = params.tsFilePath, isDryRun = params.isDryRun;
        var modTsRaw = [
            "//Automatically generated by denoify.",
            " It is important not to edit this file.\n",
            ("metadata" in params) ? "// #" + JSON.stringify(params.metadata) + "#\n\n" : "",
            "export * from \"" + (tsFilePath.startsWith("./") ? "" : "./") + tsFilePath + "\";"
        ].join("");
        if (!isDryRun) {
            fs.writeFileSync(path.join(projectPath, "mod.ts"), Buffer.from(modTsRaw, "utf8"));
        }
        else {
            console.log("(dry) mod.ts\n\n" + modTsRaw + "\n");
        }
    }
    modTsFile.create = create;
    /** Assert has been created with metadata */
    function parseMetadata(params) {
        var projectPath = params.projectPath;
        var _a = __read(fs.readFileSync(path.join(projectPath, "mod.ts"))
            .toString("utf8")
            .split("#"), 2), metadataJson = _a[1];
        if (!metadataJson) {
            throw new Error("No metadata in mod.ts");
        }
        return JSON.parse(metadataJson);
    }
    modTsFile.parseMetadata = parseMetadata;
})(modTsFile = exports.modTsFile || (exports.modTsFile = {}));
//# sourceMappingURL=modTsFile.js.map